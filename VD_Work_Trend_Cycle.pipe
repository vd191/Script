//@version=5
indicator("VD Works - Trend Cycle", timeframe="", timeframe_gaps=true)

shortLengthInput = input.int(20,    "Short BB Length", minval = 1)
longLengthInput  = input.int(50,    "Long BB Length",  minval = 1)
stdDevMultInput  = input.float(2.0, "StdDev",          minval = 0.001)

[shortMiddle, shortUpper, shortLower] = ta.bb(close, shortLengthInput, stdDevMultInput)
[longMiddle,  longUpper,  longLower]  = ta.bb(close, longLengthInput,  stdDevMultInput)

BBTrend = (math.abs(shortLower - longLower) - math.abs(shortUpper - longUpper)) / shortMiddle * 100

posColorStrong = color.new(#089981, 25)
negColorStrong = color.new(#F23645, 25)
posColorWeak   = color.new(#089981, 50)
negColorWeak   = color.new(#F23645, 50)

histColor = switch
    BBTrend > 0 and BBTrend >= BBTrend[1] => posColorStrong
    BBTrend > 0 and BBTrend <  BBTrend[1] => posColorWeak
    BBTrend < 0 and BBTrend >  BBTrend[1] => negColorWeak
    BBTrend < 0 and BBTrend <= BBTrend[1] => negColorStrong
    => posColorWeak

plot(BBTrend, "BBTrend", style = plot.style_columns, color = histColor)
// hline(0, "Zero line")


// Getting inputs
fast_length = input(title = "Fast Length", defval = 12)
slow_length = input(title = "Slow Length", defval = 26)
src = input(title = "Source", defval = close)
signal_length = input.int(title = "Signal Smoothing",  minval = 1, maxval = 50, defval = 9, display = display.data_window)
sma_source = input.string(title = "Oscillator MA Type",  defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
sma_signal = input.string(title = "Signal Line MA Type", defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal

alertcondition(hist[1] >= 0 and hist < 0, title = 'Rising to falling', message = 'The MACD histogram switched from a rising to falling state')
alertcondition(hist[1] <= 0 and hist > 0, title = 'Falling to rising', message = 'The MACD histogram switched from a falling to rising state')

hline(0, "Zero Line", color = color.new(#787B86, 50))
// plot(hist, title = "Histogram", style = plot.style_columns, color = (hist >= 0 ? (hist[1] < hist ? #26A69A : #B2DFDB) : (hist[1] < hist ? #FFCDD2 : #FF5252)))
plot(macd,   title = "MACD",   color = #2962FF)
plot(signal, title = "Signal", color = #FF6D00)